/*doc
---
title: Media
name: media
category: Structure
---
The `media` object is an image or video on one side, with descriptive content on another side.
The content area can contain any other objects. In most cases, it contains text, but we could put lists, grids, or even other media objects inside.

default gutter size is `2rem` or `20px`

If you need to align your content in the middle or the bottom of itself then consider using a [flag object][flag].

Class              | Description
------------------ | -----------------
.media             | Media object has default gutters
.media--flush      | Media object has no gutters
.media--small      | Media object has small gutters
.media--large      | Media object has large gutters
.media--rev        | Media object and media body are reversed
.xs-media          | Media object and media body are collapsed on all screen sizes
.sm-media          | Media object and media body are collapsed on small screens and up
.md-media          | Media object and media body are collapsed on medium screens and up
.lg-media          | Media object and media body are collapsed only on large screens

### Default
Mouse over the tiles to see how the elements react depending on their size.

```html_example
<div class="media">
  <div class="media__object">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
  <div class="media__body">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
</div>
```

### Flush
```html_example
<div class="media media--flush">
  <div class="media__object">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
  <div class="media__body">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
</div>
```

### Small
```html_example
<div class="media media--small">
  <div class="media__object">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
  <div class="media__body">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
</div>
```

### Large
```html_example
<div class="media media--large">
  <div class="media__object">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
  <div class="media__body">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
</div>
```

### Reverse
```html_example
<div class="media media--rev">
  <div class="media__object">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
  <div class="media__body">
    <div class="box box--styleguide box--styleguide--grow-on-hover"></div>
  </div>
</div>
```
*/

$fortitude-enable-media: true;

.#{$fortitude-namespace}media {
  @include fortitude-media;
}

.#{$fortitude-namespace}media__object {
  @include fortitude-media__object;
}

.#{$fortitude-namespace}media__object > * {
  @include fortitude-media__object__content;
}


.#{$fortitude-namespace}media__body {
  @include fortitude-media__body;
}

@if $fortitude-enable-media--flush {
  /**
   * Flush media objects.
  **/
  .#{$fortitude-namespace}media--flush {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--flush__object;
    }
  }
}

@if $fortitude-enable-media--small {
  /**
   * Small media objects.
  **/
  .#{$fortitude-namespace}media--small {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--small__object;
    }
  }
}

@if $fortitude-enable-media--large {
  /**
   * Large media objects.
  **/
  .#{$fortitude-namespace}media--large {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--large__object;
    }
  }
}

@if $fortitude-enable-media--rev {
  /**
   * Reversed image location (right instead of left). Extends `.media`.
  **/
  .#{$fortitude-namespace}media--rev {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media--rev__object;
    }

    @if $fortitude-enable-media--flush {
      /**
       * Reversed flush media objects.
      **/

      &.#{$fortitude-namespace}media--flush {
        > .#{$fortitude-namespace}media__object {
          @include fortitude-media--rev--flush__object;
        }
      }
    }

    @if $fortitude-enable-media--small {
      /**
       * Reversed small media objects.
      **/

      &.#{$fortitude-namespace}media--small {
        > .#{$fortitude-namespace}media__object {
          @include fortitude-media--rev--small__object;
        }
      }
    }

    @if $fortitude-enable-media--large {
      /**
       * Large reversed media objects.
      **/
      &.#{$fortitude-namespace}media--large {
        > .#{$fortitude-namespace}media__object {
          @include fortitude-media--rev--large__object;
        }
      }
    }
  }
}

@if $fortitude-enable-media--responsive {
  /**
   * Responsive media objects.
   *
   * There is a very pragmatic, simple implementation of a responsive media
   * object, which simply places the text-content beneath the image-content.
   *
   * We use a `max-width` media query because:
   *
   * a) it is the least verbose method in terms of amount of code required.
   * b) the media objectâ€™s default state is image-next-to-text, so its stacked
   *    state is the exception, rather than the rule.
  **/
  @include fortitude-breakpoint("(max-width: #{$fortitude-media-collapse-at})") {
    .#{$fortitude-namespace}media--responsive {
      /**
       * Rework the spacings on regular media objects.
      **/
      > .#{$fortitude-namespace}media__object {
        @include fortitude-media--responsive__object;
      }

      @if $fortitude-enable-media--flush {
        /**
         * Small responsive media objects.
         *
         * Take a little more heavy-handed approach to reworking
         * spacings on media objects that are also small media objects
         * in their regular state.
        **/
        &.#{$fortitude-namespace}media--flush {
          > .#{$fortitude-namespace}media__object {
            @include fortitude-media--responsive--flush__object;
          }
        }
      }

      @if $fortitude-enable-media--small {
        /**
         * Small responsive media objects.
         *
         * Take a little more heavy-handed approach to reworking
         * spacings on media objects that are also small media objects
         * in their regular state.
        **/
        &.#{$fortitude-namespace}media--small {
          > .#{$fortitude-namespace}media__object {
            @include fortitude-media--responsive--small__object;
          }
        }
      }

      @if $fortitude-enable-media--large {
        /**
         * Large responsive media objects.
         *
         * Take a little more heavy-handed approach to reworking
         * spacings on media objects that are also large media objects
         * in their regular state.
        **/
        &.#{$fortitude-namespace}media--large {
          > .#{$fortitude-namespace}media__object {
            @include fortitude-media--responsive--large__object;
          }
        }
      }
    }
  }
}
