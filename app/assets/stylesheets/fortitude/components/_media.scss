$fortitude-enable-media: true;

.#{$fortitude-namespace}media {
  @include fortitude-media;
}

.#{$fortitude-namespace}media__object {
  @include fortitude-media__object;
}

.#{$fortitude-namespace}media__object > img,
.#{$fortitude-namespace}media__object > video {
  @include fortitude-media__object__content;
}


.#{$fortitude-namespace}media__body {
  @include fortitude-media__body;
}

@if $fortitude-enable-media--small == true {
  /**
   * Small media objects.
  **/
  .#{$fortitude-namespace}media--small {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media__object--small;
    }
  }
}

@if $fortitude-enable-media--large == true {
  /**
   * Large media objects.
  **/
  .#{$fortitude-namespace}media--large {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media__object--large;
    }
  }
}

@if $fortitude-enable-media--rev == true {
  /**
   * Reversed image location (right instead of left). Extends `.media`.
  **/
  .#{$fortitude-namespace}media--rev {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media__object--rev;
    }

    @if $fortitude-enable-media--small == true {
      /**
       * Reversed small media objects.
      **/

      &.#{$fortitude-namespace}media--small {
        > .#{$fortitude-namespace}media__object {
          @include fortitude-media__object--rev--small;
        }
      }
    }

    @if $fortitude-enable-media--large == true {
      /**
       * Large reversed media objects.
      **/
      &.#{$fortitude-namespace}media--large {
        > .#{$fortitude-namespace}media__object {
          @include fortitude-media__object--rev--large;
        }
      }
    }
  }
}

@if $fortitude-enable-media--flush == true {
  /**
   * Flush media objects have no space between the image- and text-content.
  **/
  .#{$fortitude-namespace}media--flush {
    > .#{$fortitude-namespace}media__object {
      @include fortitude-media__object--flush;
    }
  }
}

@if $fortitude-enable-media--responsive == true {
  /**
   * Responsive media objects.
   *
   * There is a very pragmatic, simple implementation of a responsive media
   * object, which simply places the text-content beneath the image-content.
   *
   * We use a `max-width` media query because:
   *
   * a) it is the least verbose method in terms of amount of code required.
   * b) the media objectâ€™s default state is image-next-to-text, so its stacked
   *    state is the exception, rather than the rule.
  **/
  @include fortitude-breakpoint("(max-width: #{$fortitude-media-collapse-at})") {
    .#{$fortitude-namespace}media--responsive {
      /**
       * Rework the spacings on regular media objects.
      **/
      > .#{$fortitude-namespace}media__object {
        @include fortitude-media__object--responsive;
      }
      @if $fortitude-enable-media--small == true {
        /**
         * Small responsive media objects.
         *
         * Take a little more heavy-handed approach to reworking
         * spacings on media objects that are also small media objects
         * in their regular state.
        **/
        &.#{$fortitude-namespace}media--small {
          > .#{$fortitude-namespace}media__object {
            @include fortitude-media__object--responsive--small;
          }
        }
      }
      @if $fortitude-enable-media--large == true {
        /**
         * Large responsive media objects.
         *
         * Take a little more heavy-handed approach to reworking
         * spacings on media objects that are also large media objects
         * in their regular state.
        **/
        &.#{$fortitude-namespace}media--large {
          > .#{$fortitude-namespace}media__object {
            @include fortitude-media__object--responsive--large;
          }
        }
      }
    }
  }
}
